- tell how a commit can meaningfully represent history

- improve the refs section
    - name particular commits
    - group related changes (introducing a proxy) [everything can be solved with a layer of indirection xD]

- improve the HEAD section [just a tech thing - how to map repository to fs]

- provide a DEMO for them (with showing git contents)

===================

- do a recap from previous section

===================


- recap of entire git mental model (and git db)
http://eagain.net/articles/git-for-computer-scientists/

- recap of entire `.git` directory contents

===================

https://stackoverflow.com/questions/28159071/why-doesnt-git-use-more-modern-sha/47838703#47838703
https://stackoverflow.com/questions/9392365/how-would-git-handle-a-sha-1-collision-on-a-blob/34599081#34599081
https://stackoverflow.com/questions/10434326/hash-collision-in-git

===================

- więcej o diffie, merdżach i rebase'ach? - co to znaczy apply patch

===================

- odzippowywanie treści skompresowanych przez gita

https://git-scm.com/docs/gitrepository-layout

===================

- encode the email in the contact

- README.md -> you can just view presentation.md and coresponding presentation files




===================
===================



- rozwinąć dobre commity
- przykład (teraz i po toolsach): stage, verify, document

===================

- info kontaktowe

===================

- mniej aliasów

https://i.pinimg.com/originals/1f/8e/d5/1f8ed5374c558cafc22dccac9a7a438f.jpg
https://starecat.com/content/wp-content/uploads/essential-hoping-this-works-o-rly-book-cover.jpg

====================
====================
https://i.redd.it/dsdbmyoirso01.jpg
http://i.imgur.com/0blLD7H.jpg

- Social aspect - distributed vs. decentralized

